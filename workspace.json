{
  "version": 2,
  "cli": {
    "defaultCollection": "@nrwl/react"
  },
  "defaultProject": "redux-toolkit-example",
  "generators": {
    "@nrwl/react": {
      "application": {
        "style": "styled-components",
        "linter": "eslint",
        "babel": true
      },
      "component": {
        "style": "styled-components"
      },
      "library": {
        "style": "styled-components",
        "linter": "eslint"
      }
    },
    "@nrwl/next": {
      "application": {
        "style": "styled-components",
        "linter": "eslint"
      }
    }
  },
  "projects": {
    "redux-toolkit-example": {
      "root": "apps/redux-toolkit-example",
      "sourceRoot": "apps/redux-toolkit-example/src",
      "projectType": "application",
      "targets": {
        "build": {
          "executor": "@nrwl/web:build",
          "outputs": ["{options.outputPath}"],
          "options": {
            "outputPath": "dist/apps/redux-toolkit-example",
            "index": "apps/redux-toolkit-example/src/index.html",
            "main": "apps/redux-toolkit-example/src/main.tsx",
            "polyfills": "apps/redux-toolkit-example/src/polyfills.ts",
            "tsConfig": "apps/redux-toolkit-example/tsconfig.app.json",
            "assets": [
              "apps/redux-toolkit-example/src/favicon.ico",
              "apps/redux-toolkit-example/src/assets"
            ],
            "styles": [],
            "scripts": [],
            "webpackConfig": "@nrwl/react/plugins/webpack"
          },
          "configurations": {
            "production": {
              "fileReplacements": [
                {
                  "replace": "apps/redux-toolkit-example/src/environments/environment.ts",
                  "with": "apps/redux-toolkit-example/src/environments/environment.prod.ts"
                }
              ],
              "optimization": true,
              "outputHashing": "all",
              "sourceMap": false,
              "extractCss": true,
              "namedChunks": false,
              "extractLicenses": true,
              "vendorChunk": false,
              "budgets": [
                {
                  "type": "initial",
                  "maximumWarning": "2mb",
                  "maximumError": "5mb"
                }
              ]
            }
          }
        },
        "serve": {
          "executor": "@nrwl/web:dev-server",
          "options": {
            "buildTarget": "redux-toolkit-example:build"
          },
          "configurations": {
            "production": {
              "buildTarget": "redux-toolkit-example:build:production"
            }
          }
        },
        "lint": {
          "executor": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": [
              "apps/redux-toolkit-example/**/*.{ts,tsx,js,jsx}"
            ]
          }
        },
        "test": {
          "executor": "@nrwl/jest:jest",
          "outputs": ["coverage/apps/redux-toolkit-example"],
          "options": {
            "jestConfig": "apps/redux-toolkit-example/jest.config.js",
            "passWithNoTests": true
          }
        }
      }
    },
    "redux-toolkit-example-e2e": {
      "root": "apps/redux-toolkit-example-e2e",
      "sourceRoot": "apps/redux-toolkit-example-e2e/src",
      "projectType": "application",
      "targets": {
        "e2e": {
          "executor": "@nrwl/cypress:cypress",
          "options": {
            "cypressConfig": "apps/redux-toolkit-example-e2e/cypress.json",
            "tsConfig": "apps/redux-toolkit-example-e2e/tsconfig.e2e.json",
            "devServerTarget": "redux-toolkit-example:serve"
          },
          "configurations": {
            "production": {
              "devServerTarget": "redux-toolkit-example:serve:production"
            }
          }
        },
        "lint": {
          "executor": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": ["apps/redux-toolkit-example-e2e/**/*.{js,ts}"]
          }
        }
      }
    },
    "firebase-example": {
      "root": "apps/firebase-example",
      "sourceRoot": "apps/firebase-example/src",
      "projectType": "application",
      "targets": {
        "build": {
          "executor": "@nrwl/web:build",
          "outputs": ["{options.outputPath}"],
          "options": {
            "outputPath": "dist/apps/firebase-example",
            "index": "apps/firebase-example/src/index.html",
            "main": "apps/firebase-example/src/main.tsx",
            "polyfills": "apps/firebase-example/src/polyfills.ts",
            "tsConfig": "apps/firebase-example/tsconfig.app.json",
            "assets": [
              "apps/firebase-example/src/favicon.ico",
              "apps/firebase-example/src/assets"
            ],
            "styles": [],
            "scripts": [],
            "webpackConfig": "@nrwl/react/plugins/webpack"
          },
          "configurations": {
            "production": {
              "fileReplacements": [
                {
                  "replace": "apps/firebase-example/src/environments/environment.ts",
                  "with": "apps/firebase-example/src/environments/environment.prod.ts"
                }
              ],
              "optimization": true,
              "outputHashing": "all",
              "sourceMap": false,
              "extractCss": true,
              "namedChunks": false,
              "extractLicenses": true,
              "vendorChunk": false,
              "budgets": [
                {
                  "type": "initial",
                  "maximumWarning": "2mb",
                  "maximumError": "5mb"
                }
              ]
            }
          }
        },
        "serve": {
          "executor": "@nrwl/web:dev-server",
          "options": {
            "buildTarget": "firebase-example:build"
          },
          "configurations": {
            "production": {
              "buildTarget": "firebase-example:build:production"
            }
          }
        },
        "lint": {
          "executor": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": ["apps/firebase-example/**/*.{ts,tsx,js,jsx}"]
          }
        },
        "test": {
          "executor": "@nrwl/jest:jest",
          "outputs": ["coverage/apps/firebase-example"],
          "options": {
            "jestConfig": "apps/firebase-example/jest.config.js",
            "passWithNoTests": true
          }
        }
      }
    },
    "next-architecture-example": {
      "root": "apps/next-architecture-example",
      "sourceRoot": "apps/next-architecture-example",
      "projectType": "application",
      "targets": {
        "build": {
          "executor": "@nrwl/next:build",
          "outputs": ["{options.outputPath}"],
          "options": {
            "root": "apps/next-architecture-example",
            "outputPath": "dist/apps/next-architecture-example"
          },
          "configurations": {
            "production": {}
          }
        },
        "serve": {
          "executor": "@nrwl/next:server",
          "options": {
            "buildTarget": "next-architecture-example:build",
            "dev": true
          },
          "configurations": {
            "production": {
              "buildTarget": "next-architecture-example:build:production",
              "dev": false
            }
          }
        },
        "export": {
          "executor": "@nrwl/next:export",
          "options": {
            "buildTarget": "next-architecture-example:build:production"
          }
        },
        "lint": {
          "executor": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": [
              "apps/next-architecture-example/**/*.{ts,tsx,js,jsx}"
            ]
          }
        }
      }
    },
    "api": {
      "root": "apps/api",
      "sourceRoot": "apps/api/src",
      "projectType": "application",
      "prefix": "api",
      "targets": {
        "build": {
          "executor": "@nrwl/node:build",
          "outputs": ["{options.outputPath}"],
          "options": {
            "outputPath": "dist/apps/api",
            "main": "apps/api/src/main.ts",
            "tsConfig": "apps/api/tsconfig.app.json",
            "assets": ["apps/api/src/assets"]
          },
          "configurations": {
            "production": {
              "optimization": true,
              "extractLicenses": true,
              "inspect": false,
              "fileReplacements": [
                {
                  "replace": "apps/api/src/environments/environment.ts",
                  "with": "apps/api/src/environments/environment.prod.ts"
                }
              ]
            }
          }
        },
        "serve": {
          "executor": "@nrwl/node:execute",
          "options": {
            "buildTarget": "api:build"
          }
        },
        "lint": {
          "executor": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": ["apps/api/**/*.ts"]
          }
        }
      }
    },
    "jwt-store": {
      "root": "apps/jwt-store",
      "sourceRoot": "apps/jwt-store",
      "projectType": "application",
      "targets": {
        "build": {
          "executor": "@nrwl/next:build",
          "outputs": ["{options.outputPath}"],
          "options": {
            "root": "apps/jwt-store",
            "outputPath": "dist/apps/jwt-store"
          },
          "configurations": {
            "production": {}
          }
        },
        "serve": {
          "executor": "@nrwl/next:server",
          "options": {
            "buildTarget": "jwt-store:build",
            "dev": true
          },
          "configurations": {
            "production": {
              "buildTarget": "jwt-store:build:production",
              "dev": false
            }
          }
        },
        "export": {
          "executor": "@nrwl/next:export",
          "options": {
            "buildTarget": "jwt-store:build:production"
          }
        },
        "lint": {
          "executor": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": ["apps/jwt-store/**/*.{ts,tsx,js,jsx}"]
          }
        }
      }
    },
    "story-book-tutorial": {
      "root": "apps/story-book-tutorial",
      "sourceRoot": "apps/story-book-tutorial/src",
      "projectType": "application",
      "targets": {
        "build": {
          "executor": "@nrwl/web:build",
          "outputs": ["{options.outputPath}"],
          "options": {
            "outputPath": "dist/apps/story-book-tutorial",
            "index": "apps/story-book-tutorial/src/index.html",
            "main": "apps/story-book-tutorial/src/main.tsx",
            "polyfills": "apps/story-book-tutorial/src/polyfills.ts",
            "tsConfig": "apps/story-book-tutorial/tsconfig.app.json",
            "assets": [
              "apps/story-book-tutorial/src/favicon.ico",
              "apps/story-book-tutorial/src/assets"
            ],
            "styles": [],
            "scripts": [],
            "webpackConfig": "@nrwl/react/plugins/webpack"
          },
          "configurations": {
            "production": {
              "fileReplacements": [
                {
                  "replace": "apps/story-book-tutorial/src/environments/environment.ts",
                  "with": "apps/story-book-tutorial/src/environments/environment.prod.ts"
                }
              ],
              "optimization": true,
              "outputHashing": "all",
              "sourceMap": false,
              "extractCss": true,
              "namedChunks": false,
              "extractLicenses": true,
              "vendorChunk": false,
              "budgets": [
                {
                  "type": "initial",
                  "maximumWarning": "2mb",
                  "maximumError": "5mb"
                }
              ]
            }
          }
        },
        "serve": {
          "executor": "@nrwl/web:dev-server",
          "options": {
            "buildTarget": "story-book-tutorial:build"
          },
          "configurations": {
            "production": {
              "buildTarget": "story-book-tutorial:build:production"
            }
          }
        },
        "lint": {
          "executor": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": [
              "apps/story-book-tutorial/**/*.{ts,tsx,js,jsx}"
            ]
          }
        },
        "storybook": {
          "executor": "@nrwl/storybook:storybook",
          "options": {
            "uiFramework": "@storybook/react",
            "port": 4400,
            "config": {
              "configFolder": "apps/story-book-tutorial/.storybook"
            }
          },
          "configurations": {
            "ci": {
              "quiet": true
            }
          }
        },
        "build-storybook": {
          "executor": "@nrwl/storybook:build",
          "outputs": ["{options.outputPath}"],
          "options": {
            "uiFramework": "@storybook/react",
            "outputPath": "dist/storybook/story-book-tutorial",
            "config": {
              "configFolder": "apps/story-book-tutorial/.storybook"
            }
          },
          "configurations": {
            "ci": {
              "quiet": true
            }
          }
        }
      }
    },
    "nest-graphql-api": {
      "root": "apps/nest-graphql-api",
      "sourceRoot": "apps/nest-graphql-api/src",
      "projectType": "application",
      "prefix": "nest-graphql-api",
      "targets": {
        "build": {
          "executor": "@nrwl/node:build",
          "outputs": ["{options.outputPath}"],
          "options": {
            "outputPath": "dist/apps/nest-graphql-api",
            "main": "apps/nest-graphql-api/src/main.ts",
            "tsConfig": "apps/nest-graphql-api/tsconfig.app.json",
            "assets": ["apps/nest-graphql-api/src/assets"]
          },
          "configurations": {
            "production": {
              "optimization": true,
              "extractLicenses": true,
              "inspect": false,
              "fileReplacements": [
                {
                  "replace": "apps/nest-graphql-api/src/environments/environment.ts",
                  "with": "apps/nest-graphql-api/src/environments/environment.prod.ts"
                }
              ]
            }
          }
        },
        "serve": {
          "executor": "@nrwl/node:execute",
          "options": {
            "buildTarget": "nest-graphql-api:build"
          }
        },
        "lint": {
          "executor": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": ["apps/nest-graphql-api/**/*.ts"]
          }
        },
        "test": {
          "executor": "@nrwl/jest:jest",
          "outputs": ["coverage/apps/nest-graphql-api"],
          "options": {
            "jestConfig": "apps/nest-graphql-api/jest.config.js",
            "passWithNoTests": true
          }
        }
      }
    },
    "next-with-nrql": {
      "root": "apps/next-with-nrql",
      "sourceRoot": "apps/next-with-nrql",
      "projectType": "application",
      "targets": {
        "build": {
          "executor": "@nrwl/next:build",
          "outputs": ["{options.outputPath}"],
          "options": {
            "root": "apps/next-with-nrql",
            "outputPath": "dist/apps/next-with-nrql"
          },
          "configurations": {
            "production": {}
          }
        },
        "serve": {
          "executor": "@nrwl/next:server",
          "options": {
            "buildTarget": "next-with-nrql:build",
            "dev": true,
            "proxyConfig": "apps/next-with-nrql/proxy.conf.json"
          },
          "configurations": {
            "production": {
              "buildTarget": "next-with-nrql:build:production",
              "dev": false
            }
          }
        },
        "export": {
          "executor": "@nrwl/next:export",
          "options": {
            "buildTarget": "next-with-nrql:build:production"
          }
        },
        "test": {
          "executor": "@nrwl/jest:jest",
          "outputs": ["coverage/apps/next-with-nrql"],
          "options": {
            "jestConfig": "apps/next-with-nrql/jest.config.js",
            "passWithNoTests": true
          }
        },
        "lint": {
          "executor": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": ["apps/next-with-nrql/**/*.{ts,tsx,js,jsx}"]
          }
        }
      }
    },
    "next-apollo": {
      "root": "apps/next-apollo",
      "sourceRoot": "apps/next-apollo",
      "projectType": "application",
      "targets": {
        "build": {
          "executor": "@nrwl/next:build",
          "outputs": ["{options.outputPath}"],
          "options": {
            "root": "apps/next-apollo",
            "outputPath": "dist/apps/next-apollo"
          },
          "configurations": {
            "production": {}
          }
        },
        "serve": {
          "executor": "@nrwl/next:server",
          "options": {
            "buildTarget": "next-apollo:build",
            "dev": true,
            "proxyConfig": "apps/next-apollo/proxy.conf.json"
          },
          "configurations": {
            "production": {
              "buildTarget": "next-apollo:build:production",
              "dev": false
            }
          }
        },
        "export": {
          "executor": "@nrwl/next:export",
          "options": {
            "buildTarget": "next-apollo:build:production"
          }
        },
        "test": {
          "executor": "@nrwl/jest:jest",
          "outputs": ["coverage/apps/next-apollo"],
          "options": {
            "jestConfig": "apps/next-apollo/jest.config.js",
            "passWithNoTests": true
          }
        },
        "lint": {
          "executor": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": ["apps/next-apollo/**/*.{ts,tsx,js,jsx}"]
          }
        }
      }
    },
    "express-apollo-server": {
      "root": "apps/express-apollo-server",
      "sourceRoot": "apps/express-apollo-server/src",
      "projectType": "application",
      "prefix": "express-apollo-server",
      "targets": {
        "build": {
          "executor": "@nrwl/node:build",
          "outputs": ["{options.outputPath}"],
          "options": {
            "outputPath": "dist/apps/express-apollo-server",
            "main": "apps/express-apollo-server/src/main.ts",
            "tsConfig": "apps/express-apollo-server/tsconfig.app.json",
            "assets": ["apps/express-apollo-server/src/assets"]
          },
          "configurations": {
            "production": {
              "optimization": true,
              "extractLicenses": true,
              "inspect": false,
              "fileReplacements": [
                {
                  "replace": "apps/express-apollo-server/src/environments/environment.ts",
                  "with": "apps/express-apollo-server/src/environments/environment.prod.ts"
                }
              ]
            }
          }
        },
        "serve": {
          "executor": "@nrwl/node:execute",
          "options": {
            "buildTarget": "express-apollo-server:build"
          }
        },
        "lint": {
          "executor": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": ["apps/express-apollo-server/**/*.ts"]
          }
        }
      }
    },
    "booking-app": {
      "root": "apps/booking-app",
      "sourceRoot": "apps/booking-app",
      "projectType": "application",
      "targets": {
        "build": {
          "executor": "@nrwl/next:build",
          "outputs": ["{options.outputPath}"],
          "options": {
            "root": "apps/booking-app",
            "outputPath": "dist/apps/booking-app"
          },
          "configurations": {
            "production": {}
          }
        },
        "serve": {
          "executor": "@nrwl/next:server",
          "options": {
            "buildTarget": "booking-app:build",
            "dev": true
          },
          "configurations": {
            "production": {
              "buildTarget": "booking-app:build:production",
              "dev": false
            }
          }
        },
        "export": {
          "executor": "@nrwl/next:export",
          "options": {
            "buildTarget": "booking-app:build:production"
          }
        },
        "lint": {
          "executor": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": ["apps/booking-app/**/*.{ts,tsx,js,jsx}"]
          }
        }
      }
    }
  }
}
